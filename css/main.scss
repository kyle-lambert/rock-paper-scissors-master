// Google fonts
@import url('https://fonts.googleapis.com/css?family=Barlow+Semi+Condensed:600,700&display=swap');

// Custom variables
:root {
  --scissors-gradient-l: hsl(40, 84%, 53%);
  --scissors-gradient-d: hsla(39, 89%, 49%, 0.7);
  --paper-gradient-l: hsl(230, 89%, 65%);
  --paper-gradient-d: hsla(230, 89%, 62%, 0.7);
  --rock-gradient-l: hsl(349, 70%, 56%);
  --rock-gradient-d: hsla(349, 71%, 52%, 0.7);

  --primary-text: hsl(0, 0%, 100%);
  --dark-text: hsl(229, 25%, 31%);
  --score-text: hsl(229, 64%, 46%);
  --topbar-outline: hsl(217, 16%, 45%);

  --backgrond-gradient-l: hsl(214, 47%, 23%);
  --backgrond-gradient-d: hsl(237, 49%, 15%);
}

// Global resents
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 10px;
}

body {
  font-family: 'Barlow Semi Condensed', sans-serif;
  font-size: 1.6rem;
  font-weight: 600;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: .8px;
  height: 100vh;
  background-image: radial-gradient(circle at top center, var(--backgrond-gradient-l), var(--backgrond-gradient-d));
  background-size: cover;
  color: var(--primary-text);
}

button {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  text-transform: inherit;
  outline: none;
  cursor: pointer;
  letter-spacing: inherit
}

img {
  max-width: 100%;
}

// Typography
h1 {
  font-weight: 700;
  font-size: 3.8rem;
  line-height: 1.3;
  margin-bottom: 2rem;
}

h2 {
  font-weight: 600;
  font-size: 2.6rem;
  line-height: 1.3;
  margin-bottom: 1.3rem;
}

p {
  line-height: 1;
}

// Animations
@keyframes pulse {
  0% {
    transform: scale(0.8);
  }

  50% {
    transform: scale(1);
  }

  100% {
    transform: scale(0.8)
  }
}

// Components
.btn {
  margin: 1.4rem .6rem;
  padding: 1.2rem;
  color: var(--dark-text);
  border: 1px solid var(--primary-text);
  background-color: var(--primary-text);
  border-radius: 8px;
  box-shadow: 1px 1px 6px rgba(0, 0, 0, .1);

  &--game {
    cursor: pointer;
    height: 13rem;
    width: 13rem;
    background-color: #fff;
    border-radius: 50%;
  }

  &--rock {
    border: 15px solid var(--rock-gradient-l);
    box-shadow: inset 0 6px 0 0 rgba(0, 0, 0, .2), 0 6px 0 0 var(--rock-gradient-d);
    justify-self: end;
  }

  &--paper {
    border: 15px solid var(--paper-gradient-l);
    box-shadow: inset 0 6px 0 0 rgba(0, 0, 0, .2), 0 6px 0 0 var(--paper-gradient-d);
    justify-self: start;
  }

  &--scissors {
    border: 15px solid var(--scissors-gradient-l);
    box-shadow: inset 0 6px 0 0 rgba(0, 0, 0, .2), 0 6px 0 0 var(--scissors-gradient-d);
    justify-self: center;
    grid-row: 2 / 3;
    grid-column: 1 / 3;
  }

  &--rules {
    position: absolute;
    bottom: 2.6rem;
    left: 2.6rem;
    margin: 0;
    background-color: transparent;
    color: var(--primary-text);
  }

  &--exit {
    width: unset;
    padding: 1rem;
    box-shadow: unset;
    margin: 0;
  }

  &--play-again {
    margin: .5rem;
  }
}

// Rock, paper, scissors dots
.dot {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 13rem;
  width: 13rem;
  background-color: #fff;
  border-radius: 50%;

  &--rock {
    border: 15px solid var(--rock-gradient-l);
    box-shadow: inset 0 6px 0 0 rgba(0, 0, 0, .2),
      0 6px 0 0 var(--rock-gradient-d);
  }

  &--paper {
    border: 15px solid var(--paper-gradient-l);
    box-shadow:
      inset 0 6px 0 0 rgba(0, 0, 0, .2),
      0 6px 0 0 var(--paper-gradient-d);
  }

  &--scissors {
    border: 15px solid var(--scissors-gradient-l);
    box-shadow:
      inset 0 6px 0 0 rgba(0, 0, 0, .2),
      0 6px 0 0 var(--scissors-gradient-d);
  }

  &--win {
    &::after {
      position: absolute;
      content: '';
      width: 13rem;
      height: 13rem;
      background-color: transparent;
      border-radius: 50%;
      box-shadow:
        0 0 0 30px rgba(255, 255, 255, 0.06),
        0 0 0 70px rgba(255, 255, 255, 0.03),
        0 0 0 120px rgba(255, 255, 255, 0.01);
      z-index: -100;
    }
  }

  &--loading {
    margin: 0 auto;
    height: 13rem;
    width: 13rem;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, .3);
    animation-name: pulse;
    animation-duration: 2s;
    animation-timing-function: ease;
    animation-delay: 0;
    animation-iteration-count: infinite;
    animation-play-state: running;
  }
}


// Main scoreboard / Header
.header {
  padding: 2.6rem;
}

.scoreboard {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.6rem;
  border: 3px solid var(--topbar-outline);
  border-radius: 10px;

  &__logo {
    display: inline-block;
    height: 100%;
    width: 11rem;
  }

  &__score-box {
    padding: .8rem 1.4rem;
    background-color: var(--primary-text);
    border-radius: 5px;
    box-shadow: 1px 1px 6px rgba(0, 0, 0, .1);
  }

  &__header,
  &__score {
    color: var(--dark-text);
  }

  &__header {
    margin-bottom: .5rem;
  }

  &__score {
    font-weight: 700;
    font-size: 3.6rem;
  }
}

// Select game type - RPS / Lizard Spock
.main {
  padding: 2.6rem;
}

// User selection

.buttons-wrap {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr 1fr;
  row-gap: 3rem;
  column-gap: 5rem;
  background-image: url(/images/bg-triangle.svg);
  background-repeat: no-repeat;
  background-size: 25rem;
  background-position: bottom center;
}

// House selection
.house-select {
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  max-width: 100rem;
  gap: 1rem;

  &__user,
  &__house {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  }

  &__user {
    grid-column: 1 / 2;
  }

  &__house {
    grid-column: 2 / 3;
  }

  &__header {
    margin-bottom: 3rem;
  }
}

// Results display
.result {
  margin: 0 auto;
  max-width: 100rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 1fr auto;
  column-gap: 2rem;
  row-gap: 5.2rem;

  &__text {
    margin-bottom: 1rem;
  }

  &__user,
  &__house {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  }

  &__user {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }

  &__text-box {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    grid-column: 1 / 3;
    grid-row: 2 / 3;
  }

  &__house {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
  }

  &__header {
    margin-bottom: 3rem;
  }
}


// Rules pop-up
.rules {
  position: absolute;
  display: none;
  justify-content: center;
  align-items: center;
  background-color: var(--primary-text);
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, .5);

  &__box {
    background-color: var(--primary-text);
    max-width: 50rem;
    width: 80%;
    padding: 2rem;
    border-radius: 5px;
    box-shadow: 1px 1px 6px rgba(0, 0, 0, .1);
  }

  &__topbar {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2rem;
  }

  &__header {
    color: var(--dark-text);
    margin-bottom: 0;
  }

  &__img {
    padding: 0 2rem;
    width: 100%;
  }

  &--active {
    display: flex;
  }
}

// Media queries
@media screen and (min-width: 768px) {
  .btn {
    &--game {
      height: 16rem;
      width: 16rem;
    }
  }

  .buttons-wrap {
    row-gap: 6rem;
    column-gap: 8rem;
    background-image: url(/images/bg-triangle.svg);
    background-repeat: no-repeat;
    background-size: 35rem;
    background-position: bottom center;
  }

  .dot {
    height: 16rem;
    width: 16rem;

    &--win {
      &::after {
        box-shadow:
          0 0 0 50px rgba(255, 255, 255, 0.06),
          0 0 0 100px rgba(255, 255, 255, 0.03),
          0 0 0 150px rgba(255, 255, 255, 0.01),
      }
    }

    &--loading {
      height: 16rem;
      width: 16rem;
    }
  }

  .scoreboard {
    width: 80rem;
    margin: 0 auto;
  }

  .result {
    grid-template-columns: 1fr auto 1fr;
    column-gap: 2rem;
    row-gap: unset;

    &__user {
      grid-column: 1 / 2;
      grid-row: 1 / 2;
    }

    &__text-box {
      grid-column: 2 / 3;
      grid-row: 1 / 2;
    }

    &__house {
      grid-column: 3 / 4;
      grid-row: 1 / 2;
    }
  }
}