// Google fonts
@import url('https://fonts.googleapis.com/css?family=Barlow+Semi+Condensed:600,700&display=swap');

// Custom variables
:root {
  --scissors-gradient-l: hsl(40, 84%, 53%);
  --scissors-gradient-d: hsla(39, 89%, 49%, 0.7);
  --paper-gradient-l: hsl(230, 89%, 65%);
  --paper-gradient-d: hsla(230, 89%, 62%, 0.7);
  --rock-gradient-l: hsl(349, 70%, 56%);
  --rock-gradient-d: hsla(349, 71%, 52%, 0.7);

  --primary-text: hsl(0, 0%, 100%);
  --dark-text: hsl(229, 25%, 31%);
  --score-text: hsl(229, 64%, 46%);
  --topbar-outline: hsl(217, 16%, 45%);

  --backgrond-gradient-l: hsl(214, 47%, 23%);
  --backgrond-gradient-d: hsl(237, 49%, 15%);
}

// Global resents
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  font-size: 10px;
}

body {
  font-family: 'Barlow Semi Condensed', sans-serif;
  font-size: 1.6rem;
  font-weight: 600;
  text-align: center;
  text-transform: uppercase;
  height: 100vh;
  background-image: radial-gradient(circle at top center, var(--backgrond-gradient-l), var(--backgrond-gradient-d));
  background-size: cover;
  color: var(--primary-text);
}

button {
  font-size: inherit;
  font-weight: inherit;
  text-transform: inherit;
  outline: none;
  letter-spacing: .8px;
}

img {
  max-width: 100%;
}

// Typography
h1 {
  font-weight: 700;
  font-size: 3.8rem;
  line-height: 1.3;
  margin-bottom: 2rem;
}

h2 {
  font-weight: 600;
  font-size: 2.6rem;
  line-height: 1.3;
  margin-bottom: 1.3rem;
}

p {
  line-height: 1;
}

// Components
.btn {
  display: block;
  cursor: pointer;
  width: 18rem;
  margin: 1.4rem auto;
  padding: 1.4rem;
  color: var(--dark-text);
  border: 2px solid var(--primary-text);
  background-color: var(--primary-text);
  border-radius: 8px;
  box-shadow: 1px 1px 6px rgba(0, 0, 0, .1);

  &--game {
    cursor: pointer;
    height: 15rem;
    width: 15rem;
    background-color: #fff;
    border-radius: 50%;
  }

  &--rock {
    border: 15px solid var(--rock-gradient-l);
    box-shadow: inset 0 6px 0 0 rgba(0, 0, 0, .2), 0 6px 0 0 var(--rock-gradient-d);
  }

  &--paper {
    border: 15px solid var(--paper-gradient-l);
    box-shadow: inset 0 6px 0 0 rgba(0, 0, 0, .2), 0 6px 0 0 var(--paper-gradient-d);
  }

  &--scissors {
    border: 15px solid var(--scissors-gradient-l);
    box-shadow: inset 0 6px 0 0 rgba(0, 0, 0, .2), 0 6px 0 0 var(--scissors-gradient-d);
  }

  &--rules {
    width: unset;
    padding: 1.4rem 2.2rem;
    background-color: transparent;
    color: var(--primary-text);
  }
}

// Header and scoreboard
.header {
  padding: 2.6rem;
}

.scoreboard {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.6rem;
  border: 3px solid var(--topbar-outline);
  border-radius: 10px;

  &__logo {
    display: inline-block;
    height: 100%;
    width: 11rem;
  }

  &__score-box {
    padding: .8rem 1.4rem;
    background-color: var(--primary-text);
    border-radius: 5px;
    box-shadow: 1px 1px 6px rgba(0, 0, 0, .1);
  }

  &__header,
  &__score {
    color: var(--dark-text);
  }

  &__header {
    margin-bottom: .5rem;
  }

  &__score {
    font-weight: 700;
    font-size: 3.6rem;
  }
}

// Choose game type
.game-type {
  position: absolute;
  // width: 100%;
  top: 15rem;
  left: 50%;
  transform: translateX(-50%);
  padding: 2.4rem;
  opacity: 1;

  &--fadeout {
    opacity: 0;
    transition: opacity 350ms ease;
  }
}

.game {
  position: absolute;
  width: 100%;
  top: 15rem;
  padding: 2.6rem;
  opacity: 1;

  &__wrapper {
    position: relative;
    margin-top: 3rem;
    margin-bottom: 6rem;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr;
    column-gap: 6rem;
    row-gap: 3rem;

    &::after {
      content: '';
      position: absolute;
      background-image: url(/images/bg-triangle.svg);
      background-repeat: no-repeat;
      background-size: cover;
      background-position: center;
      height: 25rem;
      width: 25rem;
      left: 50%;
      top: calc(50% + 1.5rem);
      transform: translate(-50%, -50%);
      z-index: -1;
    }
  }

  &__rock,
  &__paper,
  &__scissors {
    display: flex;
  }

  &__rock,
  &__scissors {
    justify-self: flex-end;
  }

  &__scissors {
    transform: translateX(calc(50% + 3rem));
  }
}

.rules {
  display: none;
}